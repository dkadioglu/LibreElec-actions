name: build-images
on:
  workflow_dispatch:
    inputs:
      le_periodic_version:
        description: "Version and Perodic builds"
        default: nightly
        required: true
        type: choice
        options:
          - nightly
          - official
      gitref_to_build:
        description: "gitref tag or hash to build"
        default: master
        required: true
        type: string
      target:
        description: "targets to build"
        default: all
        required: true
        type: choice
        options:
          - all
          - A64.aarch64
          - H3.arm
          - H5.aarch64
          - H6.aarch64
          - R40.arm
          - AMLGX.aarch64
          - Generic.x86_64
          - Generic-legacy.x86_64
          - iMX6.arm
          - iMX8.aarch64
          - Dragonboard.aarch64
          - RK3288.arm
          - RK3328.aarch64
          - RK3399.aarch64
          - RPi2.arm
          - RPi4.aarch64
          - RPi5.aarch64
          - Exynos.arm
  #schedule:
    # The times are specified in UTC
    #- cron: "15 14 * * *"

env:
  clean_le: no_clean_le
  debug: debug
  ephemeral: ephemeral
  upload: upload

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Checkout LibreELEC/LibreELEC.tv and check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 2
          repository: "${{ github.repository_owner }}/LibreELEC.tv"
          path: "LibreELEC.tv"
      - name: print latest_commit of checked out LibreELEC/LibreELEC.tv
        run: |
          cd LibreELEC.tv
          echo $(git rev-parse HEAD)
      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: |
          cd LibreELEC.tv
          test -z "$(git rev-list --after='24 hours' $(git rev-parse HEAD))" && echo "should_run=false" >> $GITHUB_OUTPUT
          exit 0

  # Allwinner
  A64_aarch64:
    name: A64.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'A64.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: A64_aarch64
      project: Allwinner
      arch: aarch64
      device: A64
      targetbuilddir: build.LibreELEC-A64.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  H3_arm:
    name: H3.arm
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'H3.arm' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: H3_arm
      project: Allwinner
      arch: arm
      device: H3
      targetbuilddir: build.LibreELEC-H3.arm-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  H5_aarch64:
    name: H5.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'H5.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: H5_aarch64
      project: Allwinner
      arch: aarch64
      device: H5
      targetbuilddir: build.LibreELEC-H5.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  H6_aarch64:
    name: H6.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'H6.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: H6_aarch64
      project: Allwinner
      arch: aarch64
      device: H6
      targetbuilddir: build.LibreELEC-H6.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  R40_arm:
    name: R40.arm
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'R40.arm' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: R40_arm
      project: Allwinner
      arch: arm
      device: R40
      targetbuilddir: build.LibreELEC-R40.arm-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit

  # Amlogic
  AMLGX_aarch64:
    name: AMLGX.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'AMLGX.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: AMLGX_aarch64
      project: Amlogic
      arch: aarch64
      device: AMLGX
      targetbuilddir: build.LibreELEC-AMLGX.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit

  # Generic
  Generic_x86_64:
    name: Generic.x86_64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'Generic.x86_64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: Generic_x86_64
      project: Generic
      arch: x86_64
      device: Generic
      targetbuilddir: build.LibreELEC-Generic.x86_64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 20G
      version: "12.0"
      file_extension: img.gz,ova,tar
    secrets: inherit

  # Generic-legacy
  Generic-legacy_x86_64:
    name: Generic-legacy.x86_64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'Generic-legacy.x86_64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: Generic-legacy_x86_64
      project: Generic
      arch: x86_64
      device: Generic-legacy
      targetbuilddir: build.LibreELEC-Generic-legacy.x86_64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 20G
      version: "12.0"
      file_extension: img.gz,ova,tar
    secrets: inherit

  # NXP
  iMX6_arm:
    name: iMX6.arm
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'iMX6.arm' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: iMX6_arm
      project: NXP
      arch: arm
      device: iMX6
      targetbuilddir: build.LibreELEC-iMX6.arm-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  iMX8_aarch64:
    name: iMX8.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'iMX8.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: iMX8_aarch64
      project: NXP
      arch: aarch64
      device: iMX8
      targetbuilddir: build.LibreELEC-iMX8.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit

  # Qualcomm
  Dragonboard_aarch64:
    name: Dragonboard.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'Dragonboard.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: Dragonboard_aarch64
      project: Qualcomm
      arch: aarch64
      device: Dragonboard
      targetbuilddir: build.LibreELEC-Dragonboard.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit

  # Rockchip
  RK3288_arm:
    name: RK3288.arm
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'RK3288.arm' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: RK3288_arm
      project: Rockchip
      arch: arm
      device: RK3288
      targetbuilddir: build.LibreELEC-RK3288.arm-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  RK3328_aarch64:
    name: RK3328.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'RK3328.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: RK3328_aarch64
      project: Rockchip
      arch: aarch64
      device: RK3328
      targetbuilddir: build.LibreELEC-RK3328.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  RK3399_aarch64:
    name: RK3399.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'RK3399.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: RK3399_aarch64
      project: Rockchip
      arch: aarch64
      device: RK3399
      targetbuilddir: build.LibreELEC-RK3399.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit

  # RPi
  RPi2_arm:
    name: RPi2.arm
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'RPi2.arm' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: RPi2_arm
      project: RPi
      arch: arm
      device: RPi2
      targetbuilddir: build.LibreELEC-RPi2.arm-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  RPi4_aarch64:
    name: RPi4.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'RPi4.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: RPi4_aarch64
      project: RPi
      arch: aarch64
      device: RPi4
      targetbuilddir: build.LibreELEC-RPi4.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
  RPi5_aarch64:
    name: RPi5.aarch64
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'RPi5.aarch64' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: RPi5_aarch64
      project: RPi
      arch: aarch64
      device: RPi5
      targetbuilddir: build.LibreELEC-RPi5.aarch64-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit

  # Samsung
  Exynos_arm:
    name: Exynos.arm
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: |
      ( needs.check_date.outputs.should_run != 'false' )
        && ( github.event.inputs.target == 'all' || github.event.inputs.target == 'Exynos.arm' || github.event_name == 'schedule' )
    uses: ./.github/workflows/make-image.yml
    with:
      clean_le: no_clean_le
      debug: debug
      ephemeral: ephemeral
      upload: upload
      buildcmd: "make image"
      gitref: ${{ github.event.inputs.gitref_to_build || 'master' }}
      group: Exynos_arm
      project: Samsung
      arch: arm
      device: Exynos
      targetbuilddir: build.LibreELEC-Exynos.arm-12.0-devel
      buildperiodic: ${{ github.event.inputs.le_periodic_version || 'nightly' }}
      ccachecachesize: 10G
      version: "12.0"
      file_extension: img.gz,tar
    secrets: inherit
